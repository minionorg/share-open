(function(n,u){typeof exports=="object"&&typeof module<"u"?u(exports):typeof define=="function"&&define.amd?define(["exports"],u):(n=typeof globalThis<"u"?globalThis:n||self,u(n.index={}))})(this,function(n){"use strict";const u=function(e){return e.charAt(0).toUpperCase()+e.slice(1)},i=function(e){if(!e)throw new SyntaxError("type is must");return function(r){return Object.prototype.toString.call(r)===`[object ${u(e)}]`}};function s(e,r,t){if(!i("Array")(e))throw new TypeError("The list must be array");const o=[...e];if(t===void 0)o.push(r);else if(i("Number")(t))o.splice(t,0,r);else throw new TypeError("The index must be number");return o}function f(e,...r){const t=i("Array");if(t(e)){if(r.length===0)return[...e];let o=[...e];for(const l of r){if(!t(l))throw new SyntaxError(`The ${l} must be array in rest`);o=[...o,...l]}return o}else throw new SyntaxError("The ary must be array")}const c=function(e){if(!e)throw new SyntaxError("type is must");return function(r){return Object.prototype.toString.call(r)===`[object ${u(e)}]`}};c("Function"),c("Object");function a(e){if(e===null)return null;if(!i("Array")(e))throw new TypeError("The ary must be array");return[...e]}function h(e,r){if(!i("Array")(e))throw new TypeError("The list must be array");const t=[...e];if(t.length===0)return t;if(r===void 0)throw new SyntaxError("The index must be required");if(i("Number")(r))r<0?r=0:r>=t.length?r=t.length-1:r=Math.floor(r);else throw new TypeError("The index must be number");return t.splice(r,1),t}const y={add:s,addAll:f,clone:a,remove:h};n.add=s,n.addAll=f,n.clone=a,n.default=y,n.remove=h,Object.defineProperties(n,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})});
